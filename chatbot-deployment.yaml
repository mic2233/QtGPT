###############################################################################
#  Namespace
###############################################################################
apiVersion: v1
kind: Namespace
metadata:
  name: chat

###############################################################################
#  Chat backend
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-backend
  namespace: chat
spec:
  template:
    spec:
      imagePullSecrets:
        - name: ghcr-secret
      containers:
      - name: api
        image: ghcr.io/you/chat-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
        - name: MAILHOG_HOST
          value: "mailhog-smtp.chat.svc.cluster.local"
        - name: MAILHOG_PORT
          value: "1025"
---
apiVersion: v1
kind: Service
metadata:
  name: chat
  namespace: chat
spec:
  selector: { app: chat-backend }
  ports:
  - port: 8000
    targetPort: 8000
---
###############################################################################
#  MailHog – SMTP 1025 / Web 8025
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailhog
  namespace: chat
spec:
  replicas: 1
  selector:
    matchLabels: { app: mailhog }
  template:
    metadata:
      labels: { app: mailhog }
    spec:
      containers:
      - name: mailhog
        image: mailhog/mailhog:v1.0.1
        ports:
        - { containerPort: 1025, name: smtp }
        - { containerPort: 8025, name: http }
---
# SMTP inside cluster
apiVersion: v1
kind: Service
metadata:
  name: mailhog-smtp
  namespace: chat
spec:
  selector: { app: mailhog }
  ports:
  - port: 1025
    targetPort: smtp
---
# Web UI – NodePort so you can reach it from your laptop
apiVersion: v1
kind: Service
metadata:
  name: mailhog-web
  namespace: chat
spec:
  type: NodePort
  selector: { app: mailhog }
  ports:
  - port: 8025          # inside cluster
    targetPort: http
    nodePort: 30025     # http://<cluster-node>:30025
---
###############################################################################
#  Redis
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: chat
spec:
  replicas: 1
  selector:
    matchLabels: { app: redis }
  template:
    metadata:
      labels: { app: redis }
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - { containerPort: 6379 }
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: chat
spec:
  selector: { app: redis }
  ports:
  - port: 6379
    targetPort: 6379
